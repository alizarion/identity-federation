#!/bin/bash

# Initialize MySQL database.
# ADD this file into the container via Dockerfile.
# Assuming you specify a VOLUME ["/var/lib/mysql"] or `-v /var/lib/mysql` on the `docker run` commandâ€¦
# Once built, do e.g. `docker run your_image /path/to/docker-mysql-initialize.sh`
# Again, make sure MySQL is persisting data outside the container for this to have any effect.

set -e
set -x

mysql_install_db

echo "Start the MySQL daemon in the background."
/usr/sbin/mysqld &
mysql_pid=$!

until mysqladmin ping &>/dev/null; do
  echo -n "."; sleep 0.2
done



echo "Permit root login without password from outside container."
mysql -e "GRANT ALL ON *.* TO root@'%' IDENTIFIED BY 'toor' WITH GRANT OPTION"
mysql -e "FLUSH PRIVILEGES "

echo "create the default database from the ADDed file."
mysql < /tmp/init_keycloak_schema.sql
mysqladmin -u root password 'toor'
echo  "Tell the MySQL daemon to shutdown."
mysqladmin -u root -ptoor  shutdown

echo  "Wait for the MySQL daemon to exit."
wait $mysql_pid

echo  "create a tar file with the database as it currently exists"
tar czvf default_mysql.tar.gz /var/lib/mysql

# the tarfile contains the initialized state of the database.
# when the container is started, if the database is empty (/var/lib/mysql)
# then it is unpacked from default_mysql.tar.gz from
# the ENTRYPOINT /tmp/run_db script
